import { MigrationInterface, QueryRunner } from "typeorm";

export class  N1750016186730 implements MigrationInterface {
    name = ' N1750016186730'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "routine_subscriptions" DROP CONSTRAINT "FK_sub_routine"`);
        await queryRunner.query(`ALTER TABLE "routine_subscriptions" DROP CONSTRAINT "FK_sub_user"`);
        await queryRunner.query(`ALTER TABLE "personal_records" DROP CONSTRAINT "FK_pr_ex"`);
        await queryRunner.query(`ALTER TABLE "personal_records" DROP CONSTRAINT "FK_pr_user"`);
        await queryRunner.query(`ALTER TABLE "user_programs" DROP CONSTRAINT "FK_up_routine"`);
        await queryRunner.query(`ALTER TABLE "user_programs" DROP CONSTRAINT "FK_up_user"`);
        await queryRunner.query(`ALTER TABLE "friend_requests" DROP CONSTRAINT "FK_fr_recipient"`);
        await queryRunner.query(`ALTER TABLE "friend_requests" DROP CONSTRAINT "FK_fr_requester"`);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" DROP CONSTRAINT "FK_refresh_tokens_user"`);
        await queryRunner.query(`ALTER TABLE "workout_templates" DROP CONSTRAINT "FK_wt_user"`);
        await queryRunner.query(`ALTER TABLE "daily_stats" DROP CONSTRAINT "FK_ds_user"`);
        await queryRunner.query(`ALTER TABLE "push_tokens" DROP CONSTRAINT "FK_push_tokens_userId"`);
        await queryRunner.query(`ALTER TABLE "notification_settings" DROP CONSTRAINT "FK_2fd3770acdb67736f8f0a0d8ab4"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_exercises_category"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_exercises_modality"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_routine_exercises_routine_order"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_routine_subscriptions_user"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_routine_subscriptions_routine"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_routines_is_public"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_posts_created_at"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_posts_user_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_posts_workout_session_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_likes_post_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_likes_user_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_follows_follower_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_follows_following_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_body_records_user_date"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_personal_records_user_1rm"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_notifications_user_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_notifications_created_at"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_notifications_user_read"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_user_programs_user_active"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_friend_requests_recipient_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_users_email_verified"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_workout_sessions_user_date"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_workout_sessions_user_start_time"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_active_sessions"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_workout_sessions_month"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_workout_sets_session_exercise"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_workout_sets_user_exercise_date"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_workout_templates_user"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_workout_templates_public"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_daily_stats_user_date"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_push_tokens_userId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_push_tokens_userId_token"`);
        await queryRunner.query(`ALTER TABLE "friend_requests" DROP CONSTRAINT "UQ_friend_request"`);
        await queryRunner.query(`ALTER TABLE "daily_stats" DROP CONSTRAINT "UQ_user_date"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "password_reset_token_hash"`);
        await queryRunner.query(`ALTER TABLE "push_tokens" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "push_tokens" DROP COLUMN "userId"`);
        await queryRunner.query(`ALTER TABLE "push_tokens" DROP COLUMN "isActive"`);
        await queryRunner.query(`ALTER TABLE "push_tokens" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "push_tokens" DROP COLUMN "deviceId"`);
        await queryRunner.query(`ALTER TABLE "routines" ADD "weeks" integer`);
        await queryRunner.query(`ALTER TABLE "workout_templates" ADD "description" character varying(500)`);
        await queryRunner.query(`ALTER TABLE "workout_templates" ADD "clone_count" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "workout_templates" ADD "tags" text`);
        await queryRunner.query(`CREATE TYPE "public"."workout_templates_difficulty_enum" AS ENUM('beginner', 'intermediate', 'advanced')`);
        await queryRunner.query(`ALTER TABLE "workout_templates" ADD "difficulty" "public"."workout_templates_difficulty_enum"`);
        await queryRunner.query(`ALTER TABLE "workout_templates" ADD "estimated_duration" integer`);
        await queryRunner.query(`ALTER TABLE "workout_templates" ADD "target_muscles" jsonb`);
        await queryRunner.query(`ALTER TABLE "push_tokens" ADD "user_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "push_tokens" ADD "device_id" character varying`);
        await queryRunner.query(`ALTER TABLE "push_tokens" ADD "is_active" boolean NOT NULL DEFAULT true`);
        await queryRunner.query(`ALTER TABLE "push_tokens" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "push_tokens" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "routine_subscriptions" DROP CONSTRAINT "UQ_user_routine"`);
        await queryRunner.query(`ALTER TABLE "routine_subscriptions" ALTER COLUMN "user_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "routine_subscriptions" ALTER COLUMN "routine_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "personal_records" DROP CONSTRAINT "UQ_user_exercise"`);
        await queryRunner.query(`ALTER TABLE "personal_records" ALTER COLUMN "user_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "personal_records" ALTER COLUMN "exercise_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP CONSTRAINT "FK_9a8a82462cab47c73d25f49261f"`);
        await queryRunner.query(`ALTER TYPE "public"."notifications_type_enum" RENAME TO "notifications_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."notifications_type_enum" AS ENUM('workout_reminder', 'social', 'achievement', 'system', 'followed', 'friend_request', 'friend_request_accepted')`);
        await queryRunner.query(`ALTER TABLE "notifications" ALTER COLUMN "type" TYPE "public"."notifications_type_enum" USING "type"::"text"::"public"."notifications_type_enum"`);
        await queryRunner.query(`DROP TYPE "public"."notifications_type_enum_old"`);
        await queryRunner.query(`ALTER TABLE "notifications" ALTER COLUMN "user_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_programs" ALTER COLUMN "user_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_programs" ALTER COLUMN "routine_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TYPE "public"."friend_request_status_enum" RENAME TO "friend_request_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."friend_requests_status_enum" AS ENUM('pending', 'accepted', 'rejected')`);
        await queryRunner.query(`ALTER TABLE "friend_requests" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "friend_requests" ALTER COLUMN "status" TYPE "public"."friend_requests_status_enum" USING "status"::"text"::"public"."friend_requests_status_enum"`);
        await queryRunner.query(`ALTER TABLE "friend_requests" ALTER COLUMN "status" SET DEFAULT 'pending'`);
        await queryRunner.query(`DROP TYPE "public"."friend_request_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "friend_requests" ALTER COLUMN "requester_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "friend_requests" ALTER COLUMN "recipient_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "workout_templates" ALTER COLUMN "user_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "daily_stats" ALTER COLUMN "user_id" DROP NOT NULL`);
        await queryRunner.query(`CREATE INDEX "IDX_09f70d30f8dba9e5e92da3a741" ON "user_programs" ("user_id", "is_active") `);
        await queryRunner.query(`CREATE INDEX "IDX_7089b807d60cd16cb017b415ad" ON "friend_requests" ("recipient_id", "status") `);
        await queryRunner.query(`CREATE INDEX "IDX_4542dd2f38a61354a040ba9fd5" ON "refresh_tokens" ("token") `);
        await queryRunner.query(`CREATE INDEX "IDX_73e08ae9b5c7afbec8bc0199ae" ON "workout_sessions" ("user_id", "start_time") `);
        await queryRunner.query(`CREATE INDEX "IDX_fcabb23120164f03dbe79d7380" ON "workout_sessions" ("user_id", "date") `);
        await queryRunner.query(`CREATE INDEX "IDX_51ca2ea187e497a296c79bc8aa" ON "workout_templates" ("user_id", "is_quick_start") `);
        await queryRunner.query(`CREATE INDEX "IDX_282265679bddfea0cc7cf5a788" ON "workout_templates" ("is_public", "subscriber_count") `);
        await queryRunner.query(`CREATE INDEX "IDX_647d58f3f816d9738d80d7aee5" ON "daily_stats" ("user_id", "date") `);
        await queryRunner.query(`CREATE INDEX "IDX_94c371aff70dedeb89dae39f44" ON "push_tokens" ("user_id") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_cccfba5a4a655d21688fbebc9f" ON "push_tokens" ("user_id", "token") `);
        await queryRunner.query(`ALTER TABLE "routine_subscriptions" ADD CONSTRAINT "UQ_user_routine" UNIQUE ("user_id", "routine_id")`);
        await queryRunner.query(`ALTER TABLE "personal_records" ADD CONSTRAINT "UQ_user_exercise" UNIQUE ("user_id", "exercise_id")`);
        await queryRunner.query(`ALTER TABLE "friend_requests" ADD CONSTRAINT "UQ_517b36e3063ecdea6d501a9a508" UNIQUE ("requester_id", "recipient_id")`);
        await queryRunner.query(`ALTER TABLE "daily_stats" ADD CONSTRAINT "UQ_647d58f3f816d9738d80d7aee59" UNIQUE ("user_id", "date")`);
        await queryRunner.query(`ALTER TABLE "routine_subscriptions" ADD CONSTRAINT "FK_9eccb5547837fb3d15d0f71bd1a" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "routine_subscriptions" ADD CONSTRAINT "FK_e5a77d9c6a74dde08dfa2fc3ea0" FOREIGN KEY ("routine_id") REFERENCES "routines"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "personal_records" ADD CONSTRAINT "FK_da8a9e883885f86c116e85bbf50" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "personal_records" ADD CONSTRAINT "FK_2ebd827bd20fb60161f3a97f5cb" FOREIGN KEY ("exercise_id") REFERENCES "exercises"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD CONSTRAINT "FK_9a8a82462cab47c73d25f49261f" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_programs" ADD CONSTRAINT "FK_b122692056ea2a51c7c11c014b4" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_programs" ADD CONSTRAINT "FK_ef467f5a6c1dd32bb4aa26e8a62" FOREIGN KEY ("routine_id") REFERENCES "routines"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "friend_requests" ADD CONSTRAINT "FK_9a4e62994c6be786cd48cc52555" FOREIGN KEY ("requester_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "friend_requests" ADD CONSTRAINT "FK_67ede80121abbc1e6eb2c392288" FOREIGN KEY ("recipient_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" ADD CONSTRAINT "FK_3ddc983c5f7bcf132fd8732c3f4" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "workout_templates" ADD CONSTRAINT "FK_7ade528bde7d140c3b9ea582396" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "daily_stats" ADD CONSTRAINT "FK_7c09b7133924634d328ea96398e" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "push_tokens" ADD CONSTRAINT "FK_94c371aff70dedeb89dae39f440" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notification_settings" ADD CONSTRAINT "FK_91a7ffebe8b406c4470845d4781" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "notification_settings" DROP CONSTRAINT "FK_91a7ffebe8b406c4470845d4781"`);
        await queryRunner.query(`ALTER TABLE "push_tokens" DROP CONSTRAINT "FK_94c371aff70dedeb89dae39f440"`);
        await queryRunner.query(`ALTER TABLE "daily_stats" DROP CONSTRAINT "FK_7c09b7133924634d328ea96398e"`);
        await queryRunner.query(`ALTER TABLE "workout_templates" DROP CONSTRAINT "FK_7ade528bde7d140c3b9ea582396"`);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" DROP CONSTRAINT "FK_3ddc983c5f7bcf132fd8732c3f4"`);
        await queryRunner.query(`ALTER TABLE "friend_requests" DROP CONSTRAINT "FK_67ede80121abbc1e6eb2c392288"`);
        await queryRunner.query(`ALTER TABLE "friend_requests" DROP CONSTRAINT "FK_9a4e62994c6be786cd48cc52555"`);
        await queryRunner.query(`ALTER TABLE "user_programs" DROP CONSTRAINT "FK_ef467f5a6c1dd32bb4aa26e8a62"`);
        await queryRunner.query(`ALTER TABLE "user_programs" DROP CONSTRAINT "FK_b122692056ea2a51c7c11c014b4"`);
        await queryRunner.query(`ALTER TABLE "notifications" DROP CONSTRAINT "FK_9a8a82462cab47c73d25f49261f"`);
        await queryRunner.query(`ALTER TABLE "personal_records" DROP CONSTRAINT "FK_2ebd827bd20fb60161f3a97f5cb"`);
        await queryRunner.query(`ALTER TABLE "personal_records" DROP CONSTRAINT "FK_da8a9e883885f86c116e85bbf50"`);
        await queryRunner.query(`ALTER TABLE "routine_subscriptions" DROP CONSTRAINT "FK_e5a77d9c6a74dde08dfa2fc3ea0"`);
        await queryRunner.query(`ALTER TABLE "routine_subscriptions" DROP CONSTRAINT "FK_9eccb5547837fb3d15d0f71bd1a"`);
        await queryRunner.query(`ALTER TABLE "daily_stats" DROP CONSTRAINT "UQ_647d58f3f816d9738d80d7aee59"`);
        await queryRunner.query(`ALTER TABLE "friend_requests" DROP CONSTRAINT "UQ_517b36e3063ecdea6d501a9a508"`);
        await queryRunner.query(`ALTER TABLE "personal_records" DROP CONSTRAINT "UQ_user_exercise"`);
        await queryRunner.query(`ALTER TABLE "routine_subscriptions" DROP CONSTRAINT "UQ_user_routine"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_cccfba5a4a655d21688fbebc9f"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_94c371aff70dedeb89dae39f44"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_647d58f3f816d9738d80d7aee5"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_282265679bddfea0cc7cf5a788"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_51ca2ea187e497a296c79bc8aa"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_fcabb23120164f03dbe79d7380"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_73e08ae9b5c7afbec8bc0199ae"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4542dd2f38a61354a040ba9fd5"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7089b807d60cd16cb017b415ad"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_09f70d30f8dba9e5e92da3a741"`);
        await queryRunner.query(`ALTER TABLE "daily_stats" ALTER COLUMN "user_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "workout_templates" ALTER COLUMN "user_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "friend_requests" ALTER COLUMN "recipient_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "friend_requests" ALTER COLUMN "requester_id" SET NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."friend_request_status_enum_old" AS ENUM('pending', 'accepted', 'rejected')`);
        await queryRunner.query(`ALTER TABLE "friend_requests" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "friend_requests" ALTER COLUMN "status" TYPE "public"."friend_request_status_enum_old" USING "status"::"text"::"public"."friend_request_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "friend_requests" ALTER COLUMN "status" SET DEFAULT 'pending'`);
        await queryRunner.query(`DROP TYPE "public"."friend_requests_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."friend_request_status_enum_old" RENAME TO "friend_request_status_enum"`);
        await queryRunner.query(`ALTER TABLE "user_programs" ALTER COLUMN "routine_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user_programs" ALTER COLUMN "user_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "notifications" ALTER COLUMN "user_id" SET NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."notifications_type_enum_old" AS ENUM('workout_reminder', 'social', 'achievement', 'system')`);
        await queryRunner.query(`ALTER TABLE "notifications" ALTER COLUMN "type" TYPE "public"."notifications_type_enum_old" USING "type"::"text"::"public"."notifications_type_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."notifications_type_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."notifications_type_enum_old" RENAME TO "notifications_type_enum"`);
        await queryRunner.query(`ALTER TABLE "notifications" ADD CONSTRAINT "FK_9a8a82462cab47c73d25f49261f" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "personal_records" ALTER COLUMN "exercise_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "personal_records" ALTER COLUMN "user_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "personal_records" ADD CONSTRAINT "UQ_user_exercise" UNIQUE ("user_id", "exercise_id")`);
        await queryRunner.query(`ALTER TABLE "routine_subscriptions" ALTER COLUMN "routine_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "routine_subscriptions" ALTER COLUMN "user_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "routine_subscriptions" ADD CONSTRAINT "UQ_user_routine" UNIQUE ("user_id", "routine_id")`);
        await queryRunner.query(`ALTER TABLE "push_tokens" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "push_tokens" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "push_tokens" DROP COLUMN "is_active"`);
        await queryRunner.query(`ALTER TABLE "push_tokens" DROP COLUMN "device_id"`);
        await queryRunner.query(`ALTER TABLE "push_tokens" DROP COLUMN "user_id"`);
        await queryRunner.query(`ALTER TABLE "workout_templates" DROP COLUMN "target_muscles"`);
        await queryRunner.query(`ALTER TABLE "workout_templates" DROP COLUMN "estimated_duration"`);
        await queryRunner.query(`ALTER TABLE "workout_templates" DROP COLUMN "difficulty"`);
        await queryRunner.query(`DROP TYPE "public"."workout_templates_difficulty_enum"`);
        await queryRunner.query(`ALTER TABLE "workout_templates" DROP COLUMN "tags"`);
        await queryRunner.query(`ALTER TABLE "workout_templates" DROP COLUMN "clone_count"`);
        await queryRunner.query(`ALTER TABLE "workout_templates" DROP COLUMN "description"`);
        await queryRunner.query(`ALTER TABLE "routines" DROP COLUMN "weeks"`);
        await queryRunner.query(`ALTER TABLE "push_tokens" ADD "deviceId" character varying`);
        await queryRunner.query(`ALTER TABLE "push_tokens" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "push_tokens" ADD "isActive" boolean NOT NULL DEFAULT true`);
        await queryRunner.query(`ALTER TABLE "push_tokens" ADD "userId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "push_tokens" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" ADD "password_reset_token_hash" character varying`);
        await queryRunner.query(`ALTER TABLE "daily_stats" ADD CONSTRAINT "UQ_user_date" UNIQUE ("date", "user_id")`);
        await queryRunner.query(`ALTER TABLE "friend_requests" ADD CONSTRAINT "UQ_friend_request" UNIQUE ("requester_id", "recipient_id")`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_push_tokens_userId_token" ON "push_tokens" ("token", "userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_push_tokens_userId" ON "push_tokens" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_daily_stats_user_date" ON "daily_stats" ("date", "user_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_workout_templates_public" ON "workout_templates" ("is_public", "subscriber_count") `);
        await queryRunner.query(`CREATE INDEX "IDX_workout_templates_user" ON "workout_templates" ("user_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_workout_sets_user_exercise_date" ON "workout_sets" ("exercise_id", "set_number", "workout_session_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_workout_sets_session_exercise" ON "workout_sets" ("exercise_id", "workout_session_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_workout_sessions_month" ON "workout_sessions" ("date", "user_id") WHERE (end_time IS NOT NULL)`);
        await queryRunner.query(`CREATE INDEX "IDX_active_sessions" ON "workout_sessions" ("user_id") WHERE (end_time IS NULL)`);
        await queryRunner.query(`CREATE INDEX "IDX_workout_sessions_user_start_time" ON "workout_sessions" ("start_time", "user_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_workout_sessions_user_date" ON "workout_sessions" ("date", "user_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_users_email_verified" ON "users" ("email_verified") WHERE (email_verified = true)`);
        await queryRunner.query(`CREATE INDEX "IDX_friend_requests_recipient_status" ON "friend_requests" ("recipient_id", "status") `);
        await queryRunner.query(`CREATE INDEX "IDX_user_programs_user_active" ON "user_programs" ("is_active", "user_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_notifications_user_read" ON "notifications" ("read", "user_id") WHERE (read = false)`);
        await queryRunner.query(`CREATE INDEX "IDX_notifications_created_at" ON "notifications" ("created_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_notifications_user_id" ON "notifications" ("user_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_personal_records_user_1rm" ON "personal_records" ("estimated1_rm", "user_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_body_records_user_date" ON "body_records" ("date", "user_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_follows_following_id" ON "follows" ("following_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_follows_follower_id" ON "follows" ("follower_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_likes_user_id" ON "likes" ("user_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_likes_post_id" ON "likes" ("post_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_posts_workout_session_id" ON "posts" ("workout_session_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_posts_user_id" ON "posts" ("user_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_posts_created_at" ON "posts" ("created_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_routines_is_public" ON "routines" ("is_public") `);
        await queryRunner.query(`CREATE INDEX "IDX_routine_subscriptions_routine" ON "routine_subscriptions" ("routine_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_routine_subscriptions_user" ON "routine_subscriptions" ("user_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_routine_exercises_routine_order" ON "routine_exercises" ("exercise_order", "routine_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_exercises_modality" ON "exercises" ("modality") `);
        await queryRunner.query(`CREATE INDEX "IDX_exercises_category" ON "exercises" ("category") `);
        await queryRunner.query(`ALTER TABLE "notification_settings" ADD CONSTRAINT "FK_2fd3770acdb67736f8f0a0d8ab4" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "push_tokens" ADD CONSTRAINT "FK_push_tokens_userId" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "daily_stats" ADD CONSTRAINT "FK_ds_user" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "workout_templates" ADD CONSTRAINT "FK_wt_user" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "refresh_tokens" ADD CONSTRAINT "FK_refresh_tokens_user" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "friend_requests" ADD CONSTRAINT "FK_fr_requester" FOREIGN KEY ("requester_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "friend_requests" ADD CONSTRAINT "FK_fr_recipient" FOREIGN KEY ("recipient_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_programs" ADD CONSTRAINT "FK_up_user" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_programs" ADD CONSTRAINT "FK_up_routine" FOREIGN KEY ("routine_id") REFERENCES "routines"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "personal_records" ADD CONSTRAINT "FK_pr_user" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "personal_records" ADD CONSTRAINT "FK_pr_ex" FOREIGN KEY ("exercise_id") REFERENCES "exercises"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "routine_subscriptions" ADD CONSTRAINT "FK_sub_user" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "routine_subscriptions" ADD CONSTRAINT "FK_sub_routine" FOREIGN KEY ("routine_id") REFERENCES "routines"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

}
